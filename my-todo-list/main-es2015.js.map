{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/messages/messages.component.ts","./src/app/components/messages/messages.component.html","./src/app/service/message.service.ts","./src/app/service/todo-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: 'todos',\n    pathMatch: 'full'\n  },\n\n  {\n    path:'todos',\n    loadChildren: () => import('./modules/todo-index.module').then(mod => mod.TodoIndexModule)\n  },\n  {\n    path:'todos/:id',\n    loadChildren: () => import('./modules/todo.module').then(mod => mod.TodoModule)\n  },\n  {\n    path:'**',\n    redirectTo:'todos',\n    pathMatch: 'full'\n\n  }\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","import { Component,OnInit} from '@angular/core';\nimport { Todo } from './models/todo';\nimport { Observable } from 'rxjs';\nimport { TodoService } from './service/todo-service.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  title = 'Todo List';\n  todos: Todo[];\n  constructor (private todoService: TodoService ) {\n  }\n\n  private fetchData$:Observable<boolean>; \n\n  ngOnInit(): void {\n  }\n}","<div class=\"todo-list-wrapper font-thin\">\n    <div class=\"todo-list-box\">\n        <div>\n            <h1 class=\" title text-5xl text-center text-gray-400  mb-3 uppercase  font-thin\"><span class=\"bg-red-400 text-white  px-3 rounded-lg\">Todo</span> list.</h1>\n            <div class=\"todo-list bg-white rounded shadow-lg\">\n                <router-outlet></router-outlet>\n            </div> \n        </div>\n    </div>\n    <div class=\"todo-list-footer text-gray-500\">\n        <p>Developed: By Ronald Tshawe</p>\n    </div>\n    <!-- <app-messages class=\"messages text-gray-500 bg-gray-200 p-2\"></app-messages> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [FormsModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {  MessageService } from '../../service/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor( public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <p>Logs:</p>\n    <div class=\"\">\n        <ul class=\"text-sm\">\n            <li *ngFor=\"let message of messageService.messages\">{{message}}</li>\n        </ul>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor() { }\n\n  messages: string[] = [];\n  \n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, BehaviorSubject,of, throwError } from 'rxjs';\nimport { map,catchError,tap} from 'rxjs/operators';\nimport { Todo } from '../models/todo';\n\nimport { environment } from '../../environments/environment';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  url: string;\n  dueDate:any;\n  public todos: Todo[];\n  public todo: Todo; // for storing a single todo after another api call\n\n  private subject = new BehaviorSubject<Todo[]>([]);\n  public todos$ = this.subject.asObservable(); \n  \n  \n  constructor(private _http: HttpClient, private messageService: MessageService ) { \n    this.log('init...');\n    this.url = environment.apiUrl;\n    this.log(`Env Api url -> ${this.url}`);\n  }\n\n  /**\n   * getTodos, gets set number of todos \n   * @param limit \n   */\n  public getTodos(limit:any): Observable<boolean> {\n   this.log(`getTodos limit=${limit}`);\n   let url = `${this.url}/todos?_limit=${limit}`;\n   this.log(`API url: ${url}`);\n   let response = this._http.get<Todo[]>(url).pipe(\n        map((data: Todo[]) => {\n            this.log('maping data response...');\n            this.todos = data.map(todo => this.transform(todo));\n            this.subject.next(this.todos);\n           return true;\n          }\n        ),\n        catchError (err => {\n          this.log(`HTTP error ${err.message}`);\n          return of(false);\n        })\n    );\n    return response;\n       \n  }\n\n\n  /**\n   * getTodo, get a todo item with matching id\n   * @param id \n   */\n\n  getTodo(id:any):Observable<Todo> { \n    this.log(`Fetching todo id->${id}`);\n    return this._http.get<Todo>(`${this.url}/todos/${id}`)\n    .pipe(\n        map(\n          (data:Todo) => {\n            return this.transform(data);\n          }\n        ),\n        catchError (err => {\n          this.log(`HTTP error ${err.message}`);\n          return of(false);\n        })\n    )\n  }\n\n/**\n * Transform a Todo object by adding a random timestamp to dueDate property\n * @param response \n */\n\n  private transform(response:any) {\n        return Object.assign(response,{dueDate: this.randomTimeStamp()})\n  };\n\n\n  /**\n   * Generate a random time stamp between start and end date.\n   */  \n\n  randomTimeStamp() {\n    let start = new Date(environment.startDate);\n    let end = new Date(environment.endDate);\n    var diff =  end.getTime() - start.getTime();\n    var new_diff = diff * Math.random();\n    this.dueDate = new Date(start.getTime() + new_diff);\n   \n    return this.dueDate;\n  }\n\n   getUrl() {\n    return this.url;\n  };\n\n  /**\n   * upDateStatus, update the todo complete status\n   * @param id \n   */\n\n  updateStatus(id:any) {\n    const indx = this.todos.findIndex((todo)=> {\n      todo.id === id;\n    });\n    this.todos[indx].completed = !this.todos[indx].completed;\n  }\n  /**\n   * removeTodo, remove a todo item\n   * @param id \n   */\n\n  removeTodo(id:any) {\n    this.todos = this.todos.filter(todo => {\n      return  todo.id !== id\n    });\n  }\n\n  /**\n   * addTodo a new todo item\n   * @param todo \n   */\n  addTodo(todo: Todo) {\n    this.todos = [...this.todos,todo];\n    this.subject.next(this.todos);\n  }\n\n  /**\n   * log, message logger\n   * @param message \n   */\n\n  private log(message: string) {\n    this.messageService.add(`TodoService: ${message}`);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl: 'https://jsonplaceholder.typicode.com',\n  production: false,\n  startDate:1590969600000,\n  endDate:1591401600000,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}