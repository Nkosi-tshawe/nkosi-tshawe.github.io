{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/messages/messages.component.ts","webpack:///src/app/components/messages/messages.component.html","webpack:///src/app/service/message.service.ts","webpack:///src/app/service/todo-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","mod","TodoIndexModule","TodoModule","AppRoutingModule","forRoot","imports","AppComponent","todoService","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","MessagesComponent","messageService","MessageService","messages","message","push","providedIn","TodoService","_http","subject","todos$","asObservable","log","url","apiUrl","limit","response","get","pipe","data","todos","map","todo","transform","next","err","Object","assign","dueDate","randomTimeStamp","start","Date","startDate","end","endDate","diff","getTime","new_diff","Math","random","indx","findIndex","completed","filter","add","environment","production","bootstrapModule","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path:'',\n    redirectTo: 'todos',\n    pathMatch: 'full'\n  },\n\n  {\n    path:'todos',\n    loadChildren: () => import('./modules/todo-index.module').then(mod => mod.TodoIndexModule)\n  },\n  {\n    path:'todos/:id',\n    loadChildren: () => import('./modules/todo.module').then(mod => mod.TodoModule)\n  },\n  {\n    path:'**',\n    redirectTo:'todos',\n    pathMatch: 'full'\n\n  }\n\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","import { Component,OnInit} from '@angular/core';\nimport { Todo } from './models/todo';\nimport { Observable } from 'rxjs';\nimport { TodoService } from './service/todo-service.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent implements OnInit {\n\n  title = 'Todo List';\n  todos: Todo[];\n  constructor (private todoService: TodoService ) {\n  }\n\n  private fetchData$:Observable<boolean>; \n\n  ngOnInit(): void {\n  }\n}","<div class=\"todo-list-wrapper font-thin\">\n    <div class=\"todo-list-box\">\n        <div>\n            <h1 class=\" title text-5xl text-center text-gray-400  mb-3 uppercase  font-thin\"><span class=\"bg-red-400 text-white  px-3 rounded-lg\">Todo</span> list.</h1>\n            <div class=\"todo-list bg-white rounded shadow-lg\">\n                <router-outlet></router-outlet>\n            </div> \n        </div>\n    </div>\n    <div class=\"todo-list-footer text-gray-500\">\n        <p>Developed: By Ronald Tshawe</p>\n    </div>\n    <!-- <app-messages class=\"messages text-gray-500 bg-gray-200 p-2\"></app-messages> -->\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [FormsModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {  MessageService } from '../../service/message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor( public messageService: MessageService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"messageService.messages.length\">\n    <p>Logs:</p>\n    <div class=\"\">\n        <ul class=\"text-sm\">\n            <li *ngFor=\"let message of messageService.messages\">{{message}}</li>\n        </ul>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor() { }\n\n  messages: string[] = [];\n  \n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable, BehaviorSubject,of, throwError } from 'rxjs';\nimport { map,catchError,tap} from 'rxjs/operators';\nimport { Todo } from '../models/todo';\n\nimport { environment } from '../../environments/environment';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  url: string;\n  dueDate:any;\n  public todos: Todo[];\n  public todo: Todo; // for storing a single todo after another api call\n\n  private subject = new BehaviorSubject<Todo[]>([]);\n  public todos$ = this.subject.asObservable(); \n  \n  \n  constructor(private _http: HttpClient, private messageService: MessageService ) { \n    this.log('init...');\n    this.url = environment.apiUrl;\n    this.log(`Env Api url -> ${this.url}`);\n  }\n\n  /**\n   * getTodos, gets set number of todos \n   * @param limit \n   */\n  public getTodos(limit:any): Observable<boolean> {\n   this.log(`getTodos limit=${limit}`);\n   let url = `${this.url}/todos?_limit=${limit}`;\n   this.log(`API url: ${url}`);\n   let response = this._http.get<Todo[]>(url).pipe(\n        map((data: Todo[]) => {\n            this.log('maping data response...');\n            this.todos = data.map(todo => this.transform(todo));\n            this.subject.next(this.todos);\n           return true;\n          }\n        ),\n        catchError (err => {\n          this.log(`HTTP error ${err.message}`);\n          return of(false);\n        })\n    );\n    return response;\n       \n  }\n\n\n  /**\n   * getTodo, get a todo item with matching id\n   * @param id \n   */\n\n  getTodo(id:any):Observable<Todo> { \n    this.log(`Fetching todo id->${id}`);\n    return this._http.get<Todo>(`${this.url}/todos/${id}`)\n    .pipe(\n        map(\n          (data:Todo) => {\n            return this.transform(data);\n          }\n        ),\n        catchError (err => {\n          this.log(`HTTP error ${err.message}`);\n          return of(false);\n        })\n    )\n  }\n\n/**\n * Transform a Todo object by adding a random timestamp to dueDate property\n * @param response \n */\n\n  private transform(response:any) {\n        return Object.assign(response,{dueDate: this.randomTimeStamp()})\n  };\n\n\n  /**\n   * Generate a random time stamp between start and end date.\n   */  \n\n  randomTimeStamp() {\n    let start = new Date(environment.startDate);\n    let end = new Date(environment.endDate);\n    var diff =  end.getTime() - start.getTime();\n    var new_diff = diff * Math.random();\n    this.dueDate = new Date(start.getTime() + new_diff);\n   \n    return this.dueDate;\n  }\n\n   getUrl() {\n    return this.url;\n  };\n\n  /**\n   * upDateStatus, update the todo complete status\n   * @param id \n   */\n\n  updateStatus(id:any) {\n    const indx = this.todos.findIndex((todo)=> {\n      todo.id === id;\n    });\n    this.todos[indx].completed = !this.todos[indx].completed;\n  }\n  /**\n   * removeTodo, remove a todo item\n   * @param id \n   */\n\n  removeTodo(id:any) {\n    this.todos = this.todos.filter(todo => {\n      return  todo.id !== id\n    });\n  }\n\n  /**\n   * addTodo a new todo item\n   * @param todo \n   */\n  addTodo(todo: Todo) {\n    this.todos = [...this.todos,todo];\n    this.subject.next(this.todos);\n  }\n\n  /**\n   * log, message logger\n   * @param message \n   */\n\n  private log(message: string) {\n    this.messageService.add(`TodoService: ${message}`);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiUrl: 'https://jsonplaceholder.typicode.com',\n  production: false,\n  startDate:1590969600000,\n  endDate:1591401600000,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}